tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
group = 'com.nmmoc7'
version = '1.0-SNAPSHOT'
archivesBaseName = 'king_and_knight'
java.toolchain.languageVersion = JavaLanguageVersion.of(8)
minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=king_and_knight.mixins.json"
            mods {
                king_and_knight {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg "-mixin.config=king_and_knight.mixins.json"
            mods {
                king_and_knight {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'king_and_knight', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                king_and_knight {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "king_and_knight.refmap.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }
repositories {
    maven {
        name = "Local Maven"
        url = "file://${projectDir}/libs"
    }
    maven {
        name = "JEI Maven"
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "JEI Maven Fallback"
        url = "https://modmaven.k-4u.nl"
    }
    maven {
        name = "Hwyla Maven"
        url = "https://maven.tehnut.info"
    }
    maven {
        name = "geckolib"
        url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
}
dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.32'
    annotationProcessor 'org.spongepowered:mixin:0.8:processor'

    implementation 'org.jetbrains:annotations:20.1.0'

    compileOnly fg.deobf("mezz.jei:jei-${project.mc_version}:${project.jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.mc_version}:${project.jei_version}")

    compileOnly fg.deobf("mcp.mobius.waila:Hwyla:${project.hwyla_version}:api")
    runtimeOnly fg.deobf("mcp.mobius.waila:Hwyla:${project.hwyla_version}")

    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.16.5:3.0.33')
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "king_and_knight",
                //"Specification-Vendor": "king_and_knight authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                //"Implementation-Vendor": "king_and_knight authors",
                "MixinConfigs"            : "king_and_knight.mixins.json",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
